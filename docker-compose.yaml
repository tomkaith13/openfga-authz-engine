version: '3.8'

networks:
  openfga:
     driver: bridge
     name: openfga

services:
  postgres:
    image: postgres:14
    container_name: postgres
    networks:
      - openfga
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    depends_on:
      postgres:
        condition: service_healthy
    image: openfga/openfga:latest
    container_name: migrate
    command: migrate
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable
    networks:
      - openfga

  openfga:
    depends_on:
      migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    container_name: openfga
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable
      - OPENFGA_LOG_FORMAT=json
      # - OPENFGA_EXPERIMENTALS="enable-consistency-params, check-query-cache"
      - OPENFGA_CHECK_QUERY_CACHE_ENABLED=true
      - OPENFGA_CHECK_QUERY_CACHE_TTL=60s
    # command: run  --check-query-cache-enabled --check-query-cache-ttl 60s
    command: run
    networks:
      - openfga
    ports:
      # Needed for the http server
      - "8080:8080"
      # Needed for the grpc server (if used)
      - "8081:8081"
      # Needed for the playground (Do not enable in prod!)
      - "3000:3000"
      #prometheus metrics
      - "2112:2112"
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "/usr/local/bin/grpc_health_probe",
    #       "-addr=openfga:8081"
    #     ]
    #   interval: 5s
    #   timeout: 30s
    #   retries: 3
  app:
    build: .       # Build the Go app from a Dockerfile in the current directory
    ports:
      - 8888:8888  # Expose port 8888 for the Go app
    depends_on:
      - openfga # Add openfgpa as a dependency
    networks:
      - openfga
    environment:
      - FGA_API_URL=http://openfga:8080
      - FGA_STORE_NAME=openfga-auth-engine-store
      - FGA_CONFIG_FILE=authz-model.json
   
